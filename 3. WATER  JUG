def water_jug(a, b, target):
    visited = set()
    def dfs(jug1, jug2):
        if (jug1, jug2) in visited or jug1 > a or jug2 > b:
            return False
        visited.add((jug1, jug2))
        if jug1 == target or jug2 == target:
            print(jug1, jug2)
            return True
        print(jug1, jug2)  # Print the current state
        return (dfs(a, jug2) or dfs(jug1, b) or  # Fill either jug
                dfs(0, jug2) or dfs(jug1, 0) or  # Empty either jug
                dfs(jug1 - min(jug1, b - jug2), jug2 + min(jug1, b - jug2)) or  # Pour jug1 -> jug2
                dfs(jug1 + min(jug2, a - jug1), jug2 - min(jug2, a - jug1)))    # Pour jug2 -> jug1

    if not dfs(0, 0):
        print("No solution found.")

# Example usage
water_jug(4, 3, 2)
